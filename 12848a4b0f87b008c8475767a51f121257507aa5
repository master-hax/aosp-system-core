{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e066441_99260d05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-04T23:55:30Z",
      "side": 1,
      "message": "This is the approach recommended by [upstream](https://source.android.com/docs/core/architecture/configuration/add-system-properties#step6-access-properties-runtime) [docs](https://source.android.com/docs/core/architecture/configuration/sysprops-apis), rather than accessing with a string and parsing as the correct type",
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3e9844c_2561e945",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-05T00:10:37Z",
      "side": 1,
      "message": "The presubmit failures aren\u0027t relevant; I\u0027ll re-run as soon as I am able",
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8818b647_1727f02e",
        "filename": "trusty/sysprops/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2024-12-05T08:39:40Z",
      "side": 1,
      "message": "Not all the properties here are supposed to be exposed to vendor. Only the following two properties are vendor relevant:\n\n- trusty.security_vm.enabled\n- trusty.security_vm.keymint.enabled\n\nthe rest are system internal properties. Why do you want to expose this module to vendors?",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 27
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dfaf61e_66e1b5af",
        "filename": "trusty/sysprops/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-05T17:27:28Z",
      "side": 1,
      "message": "AFAIK, `trusty::TipcChannel::connect` requires knowing the correct `vm_cid` in order to connect to a Trusty vsock. This library is [exposed to vendors](https://source.corp.google.com/h/googleplex-android/platform/superproject/main/+/main:system/core/trusty/libtrusty-rs/Android.bp;l\u003d22), so I expected this to be exposed to vendors as well. If it\u0027s supposed to be a system internal property, then A) something seems wrong with the TIPC APIs expecting info from it and B) internal and external properties sharing a prefix like `trusty.security_vm` is highly confusing.\n\nI [don\u0027t know what nonsecure_vm_ready](https://android-review.git.corp.google.com/c/platform/system/core/+/3390371/comment/ba7f8c33_2b9c263d/) means, can you elaborate on why vendors shouldn\u0027t know why the vm is ready?\n\nIt\u0027s not a big problem for me to remove `vendor_available` (fortunately now), but I don\u0027t understand why.",
      "parentUuid": "8818b647_1727f02e",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 27
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78e428c0_f9532e56",
        "filename": "trusty/sysprops/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2024-12-06T08:50:38Z",
      "side": 1,
      "message": "\u003e trusty::TipcChannel::connect requires knowing the correct vm_cid \n\n`trusty.security_vm.vm_cid` is already a system internal property as defined in [1]. Currently, we pass CID as argument to `TipcChannel::connect`. As this library is generic, I don\u0027t think it needs this API to access the specific security VM CID in code.\n\nFurthermore, we only expose two sys properties to vendors. These properties are sufficient for vendors to enable the \"Security VM + KeyMint with VM\" feature. This is part of our deployment plan outlined in go/android-w-avf-trusty-vms \u003e Deployment.\n\n\u003e B) internal and external properties sharing a prefix like trusty.security_vm is highly confusing.\n\nAgreed. I also wanted to add different prefixes for these two types of properties, but the current way is recommended by selinux reviewer. See [2], CC @inseob@google.com.\n\n\u003e I don\u0027t know what nonsecure_vm_ready means, can you elaborate on why vendors shouldn\u0027t know why the vm is ready?\n\nTrusty Security VMs come in two flavors: non-secure and secure.\n\n1/ Non-secure VMs run on emulated environments like Cuttlefish, which lack pVM firmware and TEE support. Consequently, KeyMint\u0027s root-of-trust data is passed into the VM from the host\u0027s HAL, and an RPMB proxy provides secure storage.\n\n2/ Secure VMs run on physical devices. Here, pVM firmware handles the transfer of root-of-trust data via DeviceTree, and TEE provides secure storage.\n\nThe `trusty.security_vm.nonsecure_vm_ready` property is a signal used by the VM process to indicate that a non-secure VM (type 1) is ready. This signal should trigger the launch of the RPMB proxy[3] and KeyMint HALs (b/357821690 - TBD).\n\nVendors only need to specify whether they want the Security VM feature enabled on a device. Our deployment model abstracts away the VM\u0027s runtime status, so vendors don\u0027t need to track details like VM readiness.\n\nHappy to chat if there are more questions.\n\n[1] https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/property_contexts;l\u003d1780-1786;drc\u003d61544252beab26655279ba80ec88e6b0d8fdda1c\n[2] https://android-review.git.corp.google.com/c/platform/system/sepolicy/+/3342288/comment/9b5bcfc8_fd488b99/\n[3] https://cs.android.com/android/platform/superproject/main/+/main:system/core/trusty/utils/rpmb_dev/rpmb_dev.system.rc;l\u003d27;drc\u003d5d5c732a3b374c7992dfa79b6d62ea9f95119a0d",
      "parentUuid": "8dfaf61e_66e1b5af",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 27
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02f1e7cf_70969434",
        "filename": "trusty/sysprops/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-20T20:53:10Z",
      "side": 1,
      "message": "Thank you for the info and context, that is very helpful.\n\n\u003e  As this library is generic, I don\u0027t think it needs this API to access the specific security VM CID in code.\n\nI don\u0027t understand what you mean here. If I\u0027m a vendor, writing a tipc client that needs to connect to the Trusty vsock, I need to know this system property, or have an alternative API within system that can access it to connect over vsock correctly.\n\nI\u0027ve removed the `vendor_available` though the current vsock situation on vendor seems like a bug. This property is currently an exposed dependency of tipc\u0027s API, regardless of its currently defined accessibility. So either:\n\n- the tipc API should have a way to connect to vsock that doesn\u0027t require knowing this cid, or\n- this property should be changed to a `system_restricted_prop`, which is read-only outside of `system/`",
      "parentUuid": "78e428c0_f9532e56",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 27
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5108d81c_2d6a0cb5",
        "filename": "trusty/sysprops/android/sysprop/TrustyProperties.sysprop",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2024-12-05T00:26:19Z",
      "side": 1,
      "message": "We can have more than 1 trusty VM (like widevine_vm) with properties, so I think the name might need to be more specific. Also, adding @aliceywang@google.com for her opinion on the names (she is using these properties).",
      "range": {
        "startLine": 20,
        "startChar": 15,
        "endLine": 20,
        "endChar": 21
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23f4a485_7b5e1e27",
        "filename": "trusty/sysprops/android/sysprop/TrustyProperties.sysprop",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2024-12-05T08:39:40Z",
      "side": 1,
      "message": "Should we specify security_vm in `api_name` or just use `security_vm_vm_cid` to facilitate the addition of other api names as Orlando mentioned?",
      "parentUuid": "5108d81c_2d6a0cb5",
      "range": {
        "startLine": 20,
        "startChar": 15,
        "endLine": 20,
        "endChar": 21
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c32d8dc5_4c02a4e7",
        "filename": "trusty/sysprops/android/sysprop/TrustyProperties.sysprop",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-05T17:27:28Z",
      "side": 1,
      "message": "My idea is to rename `TrustyProperties.sysprop` to `SecurityVm.sysprop`, which would change the access to `trustyproperties::securityvm::vm_cid()`. I\u0027d then change the module to `android.sysprop.trusty.SecurityVm`. That way if you add properties not related to `security_vm`, they can go in their own `sysprop` file and get namespaced.\n\nThoughts?\n\n(the decision to convert `CamelCase` into `lowercase` for Rust instead of `snake_case` is awful tbh)",
      "parentUuid": "23f4a485_7b5e1e27",
      "range": {
        "startLine": 20,
        "startChar": 15,
        "endLine": 20,
        "endChar": 21
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03855a45_1427bda3",
        "filename": "trusty/sysprops/android/sysprop/TrustyProperties.sysprop",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-20T20:53:10Z",
      "side": 1,
      "message": "These are now namespaced by the `security_vm` module.",
      "parentUuid": "c32d8dc5_4c02a4e7",
      "range": {
        "startLine": 20,
        "startChar": 15,
        "endLine": 20,
        "endChar": 21
      },
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba7f8c33_2b9c263d",
        "filename": "trusty/sysprops/android/sysprop/TrustyProperties.sysprop",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 3562310
      },
      "writtenOn": "2024-12-04T23:53:25Z",
      "side": 1,
      "message": "I could use some help writing precisely correct docs for these attributes since I\u0027m not 100% sure what they are",
      "revId": "12848a4b0f87b008c8475767a51f121257507aa5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}